{% extends 'base.html.twig' %}

{% block title %}Hello MatchmakingController!
{% endblock %}

{% block body %}


	<style>
		html,
		body {
			position: relative;
			height: 100%;
		}

		main {

			font-family: Helvetica Neue, Helvetica, Arial, sans-serif;
			font-size: 14px;

			margin: 0;
			padding: 0;
		}


		main {
			position: relative;
			height: 100%;
		}

		main {
			display: flex;
			justify-content: center;
			align-items: center;
		}

		swiper-container {
			width: 540px;
			height: 720px;
		}

		swiper-slide {
			display: flex;
			align-items: center;
			justify-content: center;
			border-radius: 18px;
			background-color: rgba(237, 135, 176, 1);
			margin-top: 10%
		}
		swiper-slide img{
			max-width: 100%;
			max-height:100%;
			object-fit:cover;

		}

		.text-orga {
			position: absolute;
			bottom: 20px;
			z-index: 2;
			width: 80%;
			display: flex;
			flex-direction: column;
			align-items: center;
			font-size: 20px;
			color: black;


		}
	</style>
{# </head> #}

<main>
	<swiper-container class="mySwiper" effect="cards" grab-cursor="true" id="swiper">

	
		{% for media in medias %}
	
			<swiper-slide data-set="{{media|serialize('json')}}">
				<img src="{{ asset(media.media) }}" alt="image pro">
				<div class="text-orga">
					<p>
						{% if media.profil_id is not null %}
							<p>{{media.profil_id}}</p>
						{% else %}
							<p>{{media.lieu.id}}</p>
						{% endif %}
						{{media.pseudo}}<br>
						{{media.description}}
						<div class="media-item button">
						<button>no</button>
						<button>oui</button>
						</div>

					</p>
				</div>
			</swiper-slide>
		{% endfor %}
	</swiper-container>


</main>

{% block javascripts %}
	{# {{ parent() }} #}

	<script>


	// const swiper = new Swiper('.mySwiper', {
	// // other parameters
	// on: {
	//     init: function () {
	//      console.log('coucou')
	//     },
	// }
	// });


	const swiper = new Swiper(".mySwiper", {
			effect: "cards",
			grabCursor: true,
			});
		
        const swiperEl = document.querySelector('swiper-container');


		swiperEl.addEventListener('slideChange', (event) => {
			if (event.detail[0].swipeDirection == 'prev') {
				const activeIndex = swiperEl.swiper.activeIndex
				const currentSlide = swiperEl.swiper.slides[activeIndex];
				const dataSet = JSON.parse(currentSlide.dataset.set);
				console.log(dataSet.profil_id)
				// fetch vers une api controller 
				// ajouter un ligne dans la table match
				
		fetch('/api/match', {
			method: 'POST', // Utiliser la méthode POST pour envoyer des données
			headers: {
				'Content-Type': 'application/json' // Indiquer que le corps de la requête est au format JSON
			},
			body: JSON.stringify({ id: dataSet.profil_id }) // Convertir l'objet JavaScript en chaîne JSON
		})
			.then(response => {
				if (!response.ok) {
					throw new Error('Erreur lors de la récupération des données');
				}
				return response.json(); // Convertir la réponse en JSON
			})
			.then(data => {
				console.log(data); // Utiliser les données récupérées
			})
			.catch(error => {
				console.error('Une erreur s\'est produite:', error);
			});
			}
		});
	</script>

{% endblock %}

{% endblock %}
